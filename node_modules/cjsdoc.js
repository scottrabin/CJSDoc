/**
 * Translates the Narcissus output into a walkable AST with appropriate documentation.
 * @module cjsdoc
 * @author Scott Rabin
 * @version 0.0.1
 */

var Narcissus = require( 'narcissus' );

// create a node.type => token_name mapping
var tokenIds = Narcissus.definitions.tokenIds, typeMap = [];
for( var x in tokenIds ){
    if( tokenIds.hasOwnProperty(x) ){
	typeMap[ tokenIds[x] ] = x;
    }
}

exports.parse = function( src, filename ){
    // get the AST from Narcissus before traversing
    var ast = Narcissus.parser.parse( src, filename ), tree = copy_node( ast );

//    return tree;
    return ast;
};

function copy_node( node ){
    var ret = {
	"typeNo" : node.type,
	"typeName" : typeMap[ node.type ],
	"value" : node.value,
	"name" : node.name,
	"children" : []
    };

    for( var i = 0, l = node.children.length ; i < l ; ++i ){
	ret.children.push( copy_node( node.children[i] ) );
    }

    return ret;
}