/**
 * UnitNode: An ultra-lightweight testing framework for Node.js projects.
 * @author Scott Rabin <scottrabin@gmail.com>
 * @version 0.0.1a
 */

exports.PASS = function( msg ){
    console.log( " \u2714    : " + msg );
};

exports.FAIL = function( msg, act, exp ){
    console.log( " FAIL : " + msg );
    console.log( "        Expected:\n            " + exp );
    console.log( "        Got:\n               " + act );
};

exports.doTest = function( test ){
    var result = { };

    result.actual = (typeof test.actual === 'function' ? test.actual() : test.actual );
    result.expected = (typeof test.expected === 'function' ? test.expected() : test.expected );
    result.pass = ( test.compare ? test.compare( result.actual, result.expected ) : result.actual === result.expected );
    result.name = test.name;

    return result;
};

var DEFAULT_TEST_DIR = require( 'path' ).dirname( process.argv[1] ) + '/tests', JS_REGEX = /(.*)\.js$/;
exports.runTests = function( test_dir, runAsScripts ){
    if( !test_dir ){ test_dir = DEFAULT_TEST_DIR; }

    var results = [];
    
    // load the tests
    if( runAsScripts ){

    } else {
	var tests = require( 'fs' ).readdirSync( test_dir ), cur_test, match;
	
	for( var i = 0, l = tests.length ; i < l ; ++i ){
	    match = tests[i].match( JS_REGEX );
	    if( match === null ){ continue; }

	    cur_test = require( test_dir + '/' + match[1] );

	    var test_results = {
		"name": cur_test.name || match[1],
		"tests": [],
		"passed": 0
	    };
	    results.push( test_results );

	    for( var j = 0, num_tests = cur_test.tests.length ; j < num_tests ; ++j ){
		cur_test = exports.doTest( cur_test.tests[j] );
		if( cur_test.pass ){ test_results.passed++; }
		test_results.tests.push( cur_test );
	    }
	}
    }

    return results;
};

exports.displayTestResults = function( results ){
    var passed = 0;
    for( var i = 0, l = results.length ; i < l ; ++i ){

	var header = "[ " + results[i].name + " ] Passed: " + results[i].passed + " / " + results[i].tests.length + " (" + (100*results[i].passed/results[i].tests.length).toFixed(0) + "%)";
	console.log( header );
	console.log( new Array( header.length + 1 ).join("=") );

	for( var test_num = 0, test_len = results[i].tests.length ; test_num < test_len ; test_num++ ){
	    var test = results[i].tests[test_num];
	    if( test.pass )
		exports.PASS( test.name );
	    else
		exports.PASS( test.name, test.actual, test.expected );
	}
	console.log("");
    }
};